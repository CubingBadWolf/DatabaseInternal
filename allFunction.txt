print(tabulate.tabulate(ClassFromStudent(['Velma','Brissenden']), headers=['Class Name', 'Year Level'], tablefmt= 'github')+'\n')
print(tabulate.tabulate(ClassFromTeacher(['Mary',"Kienzle"]), headers=['Class Name', 'Year Level'], tablefmt= 'github')+'\n')
print(tabulate.tabulate(StudentsFromTeachers(['Malcolm',"Tremayne"]), headers=['First Name', 'Last Name'], tablefmt= 'github')+'\n')
print(tabulate.tabulate(StudentsFromClass(12), headers=['First Name', 'Last Name'],tablefmt='github')) #Uses ID as parameter
print(tabulate.tabulate(TeachersFromStudent(3), headers=['First Name', 'Last Name'],tablefmt='github')) #Uses ID as parameter
print(tabulate.tabulate(TeacherFromClass(3), headers=['First Name', 'Last Name'],tablefmt='github')) #Uses ID as parameter

print(tabulate.tabulate(AllClasses(), headers=['Class Name', 'Year Level'], tablefmt='github'))
print(tabulate.tabulate(AllStudents(), headers=['First Name', 'Last Name', 'Year Level'], tablefmt='github'))
print(tabulate.tabulate(AllTeachers(), headers=['First Name', 'Last Name'], tablefmt='github'))


AddClass('Science', YearLvl=10) # Parameters can = None
AddTeacher(SubjectName=None, YearLvl=None) # Parameters can = None
AddStudent()

UpdateStudentINFO(conn, 2) #Uses ID as parameter
UpdateTeacherINFO(conn, 2) #Uses ID as parameter

DeleteClass(conn, 2) #Uses ID as parameter
DeleteStudent(conn, 3) #Uses ID as parameter
DeleteTeacher(conn, 4) #Uses ID as parameter